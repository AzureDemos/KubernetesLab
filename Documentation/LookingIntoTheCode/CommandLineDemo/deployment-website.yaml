apiVersion: v1
kind: ConfigMap
metadata:
  name: config-web
  labels:
    app: web
    tier: web
data:
  configmap-website.json: |
    {
      "API": {
        "Name": "middle-api-service"
      },
      "App": {
        "Theme":  "blue"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: azuredemosrepo/aks-lab-website:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "250Mi"
            cpu: "100m"
          limits:
            memory: "350Mi"
            cpu: "200m"
        env:
        - name: "ASPNETCORE_ENVIRONMENT"
          value: "Kubernetes"
        volumeMounts:
        - name: config-volume
          mountPath: /app/Configs/Environments/Kubernetes/Json
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: config-web
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: autoscale-website
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-deployment
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tool-dockercheck-role
rules:
    - apiGroups: [""] 
      # "" indicates the core API group
      resources: ["deployments", "namespaces", "pods", "services"]
      verbs: ["get", "list", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: demo
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods","namespaces"]
  verbs: ["get", "watch", "list"]