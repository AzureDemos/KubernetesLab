parameters:
  name: ''
  artifactName: ''
  environment: ''
jobs: 
  - deployment: ${{ parameters.name }}
    displayName: ${{ parameters.name }} job
    pool:
      vmImage: $(vmImageName)
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: '${{ parameters.artifactName }}'
              downloadPath: '$(System.ArtifactsDirectory)/${{ parameters.artifactName }}'

          - task: replacetokens@3
            inputs:
              targetFiles: '$(System.ArtifactsDirectory)/${{ parameters.artifactName }}/*'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '#{'
              tokenSuffix: '}#'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)              
              secretType: 'generic'
              namespace: $(k8sNamespace)
              secretArguments: '{"auths":{"$(containerRegistry)":{"username":"$(registryUser)","password":"$(registryPassword)","email":"not@needed.com"}}}'

          - task: KubernetesManifest@0
            displayName: Deploy Middle API to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                $(System.ArtifactsDirectory)/${{ parameters.artifactName }}/*
              imagePullSecrets: |
                $(imagePullSecret)

