trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '{EnterServiceConnection}'
  vmImageName: 'ubuntu-latest'
  containerRegistry: '{YourACRName}.azurecr.io'
  tag: '$(Build.BuildId)'
  apicontainerimage: $(containerRegistry)/api:$(tag)
  websitecontainerimage: $(containerRegistry)/website:$(tag)
  imagePullSecret: 'acr-auth'
  apiManifestName: 'apimanifest'
  websiteManifestName: 'websitemanifest'
  apiname: 'middle-api'

stages:
- stage: Build
  displayName: Build stage
  
  jobs:
    - template: ./DevOps/BuildPipeline.yaml
      parameters:
        name: BuildAPI
        imageRepository: api
        dockerfilePath: Source/AKSAPI/Dockerfile.ci
        artifactName: $(apiManifestName)
        artifactPath: 'DevOps/Manifests/API'

    - template: ./DevOps/BuildPipeline.yaml      
      parameters:
        name: BuildWebsite
        imageRepository: website
        dockerfilePath: Source/AKSWebsite/Dockerfile.ci
        artifactName: $(websiteManifestName)
        artifactPath: 'DevOps/Manifests/Website'

- stage: DeployToDev
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    k8sNamespace: 'dev'
    theme: 'default'
  jobs:
    - template: ./DevOps/ReleasePipeline.yaml
      parameters:
        name: DeployAPIDev
        artifactName: $(apiManifestName)
        environment: 'Dev.dev'
    
    - template: ./DevOps/ReleasePipeline.yaml
      parameters:
        name: DeployWebsiteDev
        artifactName: $(websiteManifestName)
        environment: 'Dev.dev'


- stage: DeployToProduction
  displayName: Deploy to Production
  dependsOn: DeployToDev
  variables:
    k8sNamespace: 'prod'
    theme: 'red'
  jobs:
    - template: ./DevOps/ReleasePipeline.yaml
      parameters:
        name: DeployAPIProd
        artifactName: $(apiManifestName)
        environment: 'Prod.prod'
    
    - template: ./DevOps/ReleasePipeline.yaml
      parameters:
        name: DeployWebsiteProd
        artifactName: $(websiteManifestName)
        environment: 'Prod.prod'

        sss
